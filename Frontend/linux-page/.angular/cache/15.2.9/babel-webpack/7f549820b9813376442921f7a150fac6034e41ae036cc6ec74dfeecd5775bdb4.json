{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ApiService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = \"http://localhost:3000\";\n  }\n  getComandos() {\n    return this.http.get(`${this.apiUrl}/comandos`);\n  }\n  getComando(nombre) {\n    return this.http.get(`${this.apiUrl}/get-comando/${nombre}`);\n  }\n  getTags() {\n    return this.http.get(`${this.apiUrl}/get-tags`);\n  }\n  getTag(tag) {\n    return this.http.get(`${this.apiUrl}/get-tag/${tag}`);\n  }\n}\n_class = ApiService;\n_class.ɵfac = function ApiService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;;AAOA,OAAM,MAAOA,UAAU;EAIrBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFhB,WAAM,GAAG,uBAAuB;EAEA;EAExCC,WAAW;IACT,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAC,GAAG,IAAI,CAACC,MAAM,WAAW,CAAC;EACjD;EAEAC,UAAU,CAACC,MAAa;IACtB,OAAO,IAAI,CAACL,IAAI,CAACE,GAAG,CAAC,GAAG,IAAI,CAACC,MAAM,gBAAgBE,MAAM,EAAE,CAAC;EAC9D;EAEAC,OAAO;IACL,OAAO,IAAI,CAACN,IAAI,CAACE,GAAG,CAAC,GAAG,IAAI,CAACC,MAAM,WAAW,CAAC;EACjD;EAEAI,MAAM,CAACC,GAAU;IACf,OAAO,IAAI,CAACR,IAAI,CAACE,GAAG,CAAC,GAAG,IAAI,CAACC,MAAM,YAAYK,GAAG,EAAE,CAAC;EACvD;;SApBWV,UAAU;;mBAAVA,MAAU;AAAA;;SAAVA,MAAU;EAAAW,SAAVX,MAAU;EAAAY,YAFT;AAAM","names":["ApiService","constructor","http","getComandos","get","apiUrl","getComando","nombre","getTags","getTag","tag","factory","providedIn"],"sourceRoot":"","sources":["D:\\proyectos\\Linux-C\\Frontend\\linux-page\\src\\app\\api.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/internal/Observable';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  private apiUrl = \"http://localhost:3000\"\n\n  constructor(private http: HttpClient) { }\n\n  getComandos(): Observable<any> {\n    return this.http.get(`${this.apiUrl}/comandos`);\n  }\n\n  getComando(nombre:string): Observable<any> {\n    return this.http.get(`${this.apiUrl}/get-comando/${nombre}`)\n  }\n\n  getTags(): Observable<any> {\n    return this.http.get(`${this.apiUrl}/get-tags`)\n  }\n\n  getTag(tag:string): Observable<any> {\n    return this.http.get(`${this.apiUrl}/get-tag/${tag}`)\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}